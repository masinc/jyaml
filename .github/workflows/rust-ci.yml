name: Rust CI

"on":
  push:
    branches: [main, develop]
    paths:
      - "implementations/rust/**"
      - ".github/workflows/rust-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "implementations/rust/**"
      - ".github/workflows/rust-ci.yml"
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/rust-test.yml
    with:
      rust-version: 'stable'

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: implementations/rust
          key: coverage
          shared-key: shared

      - name: Generate code coverage
        working-directory: implementations/rust
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: implementations/rust/lcov.info
          directory: implementations/rust
          fail_ci_if_error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install --force cargo-audit

      - name: Run security audit
        working-directory: implementations/rust
        run: cargo audit

  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            implementations/rust/target
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('implementations/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-bench-
            ${{ runner.os }}-cargo-

      - name: Run benchmarks
        working-directory: implementations/rust
        run: |
          # Add benchmarks when available
          echo "Benchmarks will be added in future versions"
